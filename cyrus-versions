#!/usr/bin/env perl

use warnings;
use strict;

use File::Basename;
use File::Find;

no warnings 'File::Find';

my @prefixes = (
    @ENV{qw( CYRUSDEFAULT_PREFIX
             CYRUSMURDER_PREFIX
             CYRUSREPLICA_PREFIX )},
    glob "/cyrus/*"
);

sub format_version
{
    my ($version) = @_;

    my (@branches, @tags);

    if (not $version) {
        print "unknown version\n";
        return;
    }

    $version =~ s/^cyrus-imapd[- ]//;

    if ($ENV{CYRUS_SOURCEDIR}
        && -d $ENV{CYRUS_SOURCEDIR}
        && $version =~ m/-g([0-9a-fA-F]*)(?:-dirty)?$/)
    {
        my $commit = $1;
        my $branch_cmd = "(cd $ENV{CYRUS_SOURCEDIR}"
                         . " && git branch --points-at $commit) 2>/dev/null";
        open my $in, '-|', $branch_cmd or die $!;
        while (<$in>) {
            if (m/^[* ] (.*)$/) {
                push @branches, $1;
            }
        }
        close $in;

        my $tags_cmd = "(cd $ENV{CYRUS_SOURCEDIR}"
                       . " && git tag --points-at $commit) 2>/dev/null";
        open $in, '-|', $tags_cmd or die $!;
        while (<$in>) {
            chomp;
            push @tags, $_;
        }
        close $in;
    }

    if ($version !~ m/-g[0-9a-fA-F]*(?:-dirty)?$/) {
        # it's a recognisable release!
        $version = "\033[1;33m$version\033[0m";
    }
    else {
        # FIXME would be nice to hash these to unique colours...
        $version =~ s/^(\d+\.\d+\.\d+)/\033[94m$1\033[0m/;
    }

    print $version;
    if (scalar @branches) {
        print " \033[92m" . join(q{ }, @branches) . "\033[0m";
    }
    if (scalar @tags) {
        print " \033[93m" . join(q{ }, @tags) . "\033[0m";
    }
    print "\n";
}

sub master_version
{
    return if basename($_) ne 'master';
    return if not -x $_;

    my $version = qx($_ -V 2>/dev/null);
    chomp $version;

    format_version($version);
}

my $whitespace = q{};

if ($ENV{CYRUS_SOURCEDIR} && -d $ENV{CYRUS_SOURCEDIR}) {
    my $describe_cmd = "(cd $ENV{CYRUS_SOURCEDIR}"
                       . " && git describe --dirty=-dirty"
                       . "                 --match cyrus-imapd-*"
                       . ") 2>/dev/null";
    my $version = qx($describe_cmd);
    chomp $version;

    print "$whitespace\033[1msource (and cassandane):\033[0m\n";
    format_version($version);
    $whitespace = qq{\n};
}

foreach my $p (grep { -d } @prefixes) {
    print "$whitespace\033[1m$p:\033[0m\n";

    find({ wanted => \&master_version, no_chdir => 1 }, $p);

    $whitespace = qq{\n};
}
