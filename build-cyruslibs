#!/bin/bash
set -e
set -o pipefail

if [ -z $1 ]; then
    echo "usage: $0 <version>"
    exit 1
fi

CL_VERSION="cyruslibs-fastmail-v$1"
CL_PREFIX="/usr/local/$CL_VERSION"
CL_BUILD="./build.sh"

if [ -e "$CL_PREFIX" ]; then
    echo "$CL_PREFIX already exists"
    exit 2
fi

if [ ! -x "$CL_BUILD" ]; then
    echo "$CL_BUILD not found"
    exit 3
fi

if git show-ref --tags "$CL_VERSION" --quiet; then
    echo "building $CL_VERSION into $CL_PREFIX"
else
    echo "$CL_VERSION: tag not found"
    exit 4
fi

if [ -n "$(git status --porcelain)" ]; then
    echo "repository contains uncommitted files:"
    git status --porcelain
    exit 5
fi

cleanup() {
    ec=$?
    git checkout -
    git submodule update
    git reset --hard --recurse-submodules
    git clean -xfdq
    git submodule foreach git clean -xfdq
    if [[ ${ec} -ne 0 ]]; then
        echo "something went wrong, not installed"
        sudo rm -fr "$CL_PREFIX"
    else
        echo "success! $CL_VERSION installed to $CL_PREFIX"
    fi
}

if ! git checkout --detach "$CL_VERSION"; then
    echo "git checkout failed"
    exit 6
fi

trap cleanup EXIT

git submodule update
git clean -xfd

./build.sh $CL_VERSION libchardet
./build.sh $CL_VERSION libical
./build.sh $CL_VERSION vzic
./build.sh $CL_VERSION timezones
./build.sh $CL_VERSION icu
./build.sh $CL_VERSION xapian
